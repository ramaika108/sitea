{"ast":null,"code":"import _regeneratorRuntime from\"/home/ydv/projects/ezichestvo/ts/malenko/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/ydv/projects/ezichestvo/ts/malenko/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var Fetch=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(uri,setterFunction){var res,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(uri);case 2:res=_context.sent;_context.next=5;return res.json();case 5:data=_context.sent;setterFunction(data);case 7:case\"end\":return _context.stop();}}},_callee);}));return function Fetch(_x,_x2){return _ref.apply(this,arguments);};}();export default Fetch;","map":{"version":3,"names":["Fetch","uri","setterFunction","fetch","res","json","data"],"sources":["/home/ydv/projects/ezichestvo/ts/malenko/frontend/src/components/Fetch.tsx"],"sourcesContent":["\nconst Fetch = async (uri:string, setterFunction:Function) => {\n    let res = await fetch(uri);\n    let data = await res.json();\n    setterFunction(data);\n}\n\nexport default Fetch;\n"],"mappings":"8RACA,GAAMA,MAAK,4FAAG,iBAAOC,GAAP,CAAmBC,cAAnB,uJACMC,MAAK,CAACF,GAAD,CADX,QACNG,GADM,qCAEOA,IAAG,CAACC,IAAJ,EAFP,QAENC,IAFM,eAGVJ,cAAc,CAACI,IAAD,CAAd,CAHU,sDAAH,kBAALN,MAAK,gDAAX,CAMA,cAAeA,MAAf"},"metadata":{},"sourceType":"module"}